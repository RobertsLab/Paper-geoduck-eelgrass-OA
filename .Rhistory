png(paste("results/Correlation-plots/", Env.parameters[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),][c("Growth", "Var")], main=paste("Growth ~ ", Env.parameters[[i]], " Variance", sep=""), ylab="Relative Growth (mm)", xlab=paste(Env.parameters[[i]], " Variance", sep=""))
dev.off()
}
# Correlation test of Pep1 by environmental parameters, each protein separately
temp2 <- data.frame(matrix(ncol=6, nrow=0))
colnames(temp2) <- c("Protein", "Env-Paramter", "Env-Metric", "Estimate", "Statistic", "P-Value")
temp4 <- data.frame(matrix(ncol=6, nrow=0))
colnames(temp4) <- c("Protein", "Env-Paramter", "Env-Metric", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficien and plot peptides against growth for each protein
for (j in 1:length(Env.parameters)) {
for (i in 1:length(Protein.names)) {
temp1 <- cor.test(~Pep1 + Mean, data=subset(Master.SRM, (metric==Env.parameters[[j]] & Protein==Protein.names[[i]])))
temp2[i+13*j,"Protein"] <- Protein.names[[i]]
temp2[i+13*j,"Env-Paramter"] <- Env.parameters[[j]]
temp2[i+13*j,"Env-Metric"] <- "Mean"
temp2[i+13*j,"Estimate"] <- temp1$estimate
temp2[i+13*j,"Statistic"] <- temp1$statistic
temp2[i+13*j,"P-Value"] <- temp1$p.value
}
}
for (j in 1:length(Env.parameters)) {
for (i in 1:length(Protein.names)) {
temp3 <- cor.test(~Pep1 + Var, data=subset(Master.SRM, (metric==Env.parameters[[j]] & Protein==Protein.names[[i]])))
temp4[i+13*j,"Protein"] <- Protein.names[[i]]
temp4[i+13*j,"Env-Paramter"] <- Env.parameters[[j]]
temp4[i+13*j,"Env-Metric"] <- "Var"
temp4[i+13*j,"Estimate"] <- temp3$estimate
temp4[i+13*j,"Statistic"] <- temp3$statistic
temp4[i+13*j,"P-Value"] <- temp3$p.value
}
}
env.pep1.cor <- rbind(temp2, temp4)
write.csv(file="results/SRM/Pep-Env-Cor-test.csv", env.pep1.cor)
# Generate correlation plots between Mean Environmental Parameters and  Peptide 1 abundance (most abundant/detected peptide in all proteins)
# Mean pH
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-pH-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="pH"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean pH", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
}
# pH Variance
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-pH Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="pH"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\npH Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
}
# DO
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-DO-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="DO"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean DO", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-DO Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="DO"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\nDO Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
}
#Temperature
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-Temperature-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Temperature"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean Temperature", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Temperature Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Temperature"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\nTemperature Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
}
Protein.names
Protein.names[[-11]]
Protein.names[[c(-11)]]
Protein.names[c(-11)]
Protein.names4plots <- Protein.names[[c(-11)]]
Protein.names[[c(-11)]]
Protein.names4plots <- Protein.names[c(-11)]
# Generate correlation plots between Peptide 1 abundance (most abundant/detected peptide in all proteins) and relative growth
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Protein.names4plots[[i]], Master.SRM$Protein),][c("Growth", "Pep1")], main=paste(Protein.names4plots[[i]], "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
}
# Do this separately for Na-K ATPase (due to slash in name)
png("results/Correlation-plots/NaK-Grow-Corrplot.png", width=700, height=700)
plot(Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),][c("Growth", "Pep1")], main=paste("Sodium/potassium-transporting", "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
# Generate correlation plots between relative growth mean pH, DO, Temp, Salinity
for (i in 1:length(Env.parameters)) {
png(paste("results/Correlation-plots/", Env.parameters[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),][c("Mean", "Growth")], main=paste("Growth ~ Mean ", Env.parameters[[i]], sep=""), ylab="Relative Growth (mm)", xlab=paste("Mean ", Env.parameters[[i]], sep=""))
dev.off()
}
# Generate correlation plots between relative growth & pH, DO, Temp, Salinity
for (i in 1:length(Env.parameters)) {
png(paste("results/Correlation-plots/", Env.parameters[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),][c("Growth", "Var")], main=paste("Growth ~ ", Env.parameters[[i]], " Variance", sep=""), ylab="Relative Growth (mm)", xlab=paste(Env.parameters[[i]], " Variance", sep=""))
dev.off()
}
# Generate correlation plots between Mean Environmental Parameters and  Peptide 1 abundance (most abundant/detected peptide in all proteins)
# Mean pH
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Mean-pH-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="pH"))[c("Mean", "Pep1")], main=paste(Protein.names4plots[[i]], " Peptide Abundance ~ ", "\nMean pH", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
}
# pH Variance
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-pH Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="pH"))[c("Var", "Pep1")], main=paste(Protein.names4plots[[i]], " Abundance ~ ", "\npH Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
}
# DO
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Mean-DO-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="DO"))[c("Mean", "Pep1")], main=paste(Protein.names4plots[[i]], " Peptide Abundance ~ ", "\nMean DO", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-DO Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="DO"))[c("Var", "Pep1")], main=paste(Protein.names4plots[[i]], " Abundance ~ ", "\nDO Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
}
#Temperature
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Mean-Temperature-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="Temperature"))[c("Mean", "Pep1")], main=paste(Protein.names4plots[[i]], " Peptide Abundance ~ ", "\nMean Temperature", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Temperature Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="Temperature"))[c("Var", "Pep1")], main=paste(Protein.names4plots[[i]], " Abundance ~ ", "\nTemperature Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
}
#Salinity
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Mean-Salinity-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="Salinity"))[c("Mean", "Pep1")], main=paste(Protein.names4plots[[i]], " Peptide Abundance ~ ", "\nMean Salinity", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Salinity")
dev.off()
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Salinity Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names4plots[[i]] & metric=="Salinity"))[c("Var", "Pep1")], main=paste(Protein.names4plots[[i]], " Abundance ~ ", "\nSalinity Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Salinity")
dev.off()
}
Protein.names4plots <- Protein.names
Protein.names4plots
Protein.names4plots[11]
Protein.names4plots[11] <- "NaK-ATPase"
Protein.names4plots
Protein.names4plots
# Generate correlation plots between Peptide 1 abundance (most abundant/detected peptide in all proteins) and relative growth
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Protein.names4plots[[i]], Master.SRM$Protein),][c("Growth", "Pep1")], main=paste(Protein.names4plots[[i]], "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
}
dev.off()
dev.off()
dev.off()
Protein.names4plots
# Generate correlation plots between Peptide 1 abundance (most abundant/detected peptide in all proteins) and relative growth
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Protein.names4plots[[i]], Master.SRM$Protein),][c("Growth", "Pep1")], main=paste(Protein.names4plots[[i]], "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
}
Protein.names4plots
Protein.names4plots
# Merge protein data with environmental summary stats
Master.temp <- data.frame(merge(x=data.melted.plus.pepsum.wide[c("Protein", "Sample", "Sample.Shorthand", "Pep1", "Pep2", "Pep3")], y=EnvSum, by.x = "Sample.Shorthand", by.y = "variable", all.x=TRUE, all.y=TRUE), stringsAsFactors = FALSE)
Master.SRM <- data.frame(merge(x=Growth[c("PRVial", "FShell", "AvgIShell", "Growth")], y=Master.temp, by.x="PRVial", by.y="Sample", all.x=T, all.y=T))
# Replace NaN strings with official "NA" designation & convert environmental stats to numeric
Master.SRM[Master.SRM == "NaN"] <- NA
Master.SRM$Region <- as.factor(Master.SRM$Region)
# Investigating correlation between growth, peptide abundance
# Note: Pep1 is the most abundant (within a protein), followed by Pep2, then Pep3
plot(Master.SRM[c("Growth", "Pep1", "Pep2", "Pep3")]) # It looks like protein abundance increased with growth
# Investigating correlation between growth, peptide abundance
# Note: Pep1 is the most abundant (within a protein), followed by Pep2, then Pep3
plot(Master.SRM[c("Growth", "Pep1", "Pep2", "Pep3")]) # It looks like protein abundance increased with growth
dev.off()
# Investigating correlation between growth, peptide abundance
# Note: Pep1 is the most abundant (within a protein), followed by Pep2, then Pep3
plot(Master.SRM[c("Growth", "Pep1", "Pep2", "Pep3")]) # It looks like protein abundance increased with growth
# Investigating correlation between growth, peptide abundance
# Note: Pep1 is the most abundant (within a protein), followed by Pep2, then Pep3
plot(Master.SRM[c("Growth", "Pep1", "Pep2", "Pep3")]) # It looks like protein abundance increased with growth
# Confirmed more interactive plot.
plot_ly(data=Master.SRM, y=~Pep1, x=~Growth, type="scatter", color=~Protein) %>%
layout(title="Peptide against Growth",
yaxis = list(title = 'Protein Abundance'),
legend = list(x=.85, y=.95))
# Correlation test by protein
grow.Pep1.cor <- data.frame(matrix(ncol=4, nrow=0))
colnames(grow.Pep1.cor) <- c("Protein", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficien and plot peptides against growth for each protein
for (i in 1:length(Protein.names)) {
temp1 <- cor.test(~Growth + Pep1, data=Master.SRM[grepl(Protein.names[[i]], Master.SRM$Protein),])
grow.Pep1.cor[i,"Protein"] <- Protein.names[[i]]
grow.Pep1.cor[i,"Estimate"] <- temp1$estimate
grow.Pep1.cor[i,"Statistic"] <- temp1$statistic
grow.Pep1.cor[i,"P-Value"] <- temp1$p.value
}
Protein.names4plots <- Protein.names
Protein.names4plots[11] <- "NaK-ATPase"
Protein.names4plots
# Generate correlation plots between Peptide 1 abundance (most abundant/detected peptide in all proteins) and relative growth
for (i in 1:length(Protein.names4plots)) {
png(paste("results/Correlation-plots/", Protein.names4plots[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Protein.names4plots[[i]], Master.SRM$Protein),][c("Growth", "Pep1")], main=paste(Protein.names4plots[[i]], "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
}
dev.off()
dev.off()
dev.off()
dev.off()
Protein.names
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),]
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"]
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"] <- "NaK-ATPase"
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"] <- c("NaK-ATPase")
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"] <- c("NaK-ATPase")
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"]
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"]
# Merge protein data with environmental summary stats
Master.temp <- data.frame(merge(x=data.melted.plus.pepsum.wide[c("Protein", "Sample", "Sample.Shorthand", "Pep1", "Pep2", "Pep3")], y=EnvSum, by.x = "Sample.Shorthand", by.y = "variable", all.x=TRUE, all.y=TRUE), stringsAsFactors = FALSE)
Master.SRM <- data.frame(merge(x=Growth[c("PRVial", "FShell", "AvgIShell", "Growth")], y=Master.temp, by.x="PRVial", by.y="Sample", all.x=T, all.y=T))
# Replace NaN strings with official "NA" designation & convert environmental stats to numeric
Master.SRM[Master.SRM == "NaN"] <- NA
Master.SRM$Region <- as.factor(Master.SRM$Region)
Master.SRM[grepl("Sodium/potassium-transporting", Master.SRM$Protein),"Protein"] <- c("NaK-ATPase")
Master.SRM
View(Master.SRM)
Master.SRM <- data.frame(merge(x=Growth[c("PRVial", "FShell", "AvgIShell", "Growth")], y=Master.temp, by.x="PRVial", by.y="Sample", all.x=T, all.y=T))
# Replace NaN strings with official "NA" designation & convert environmental stats to numeric
Master.SRM[Master.SRM == "NaN"] <- NA
Master.SRM$Region <- as.factor(Master.SRM$Region)
Master.SRM$Protein[Master.SRM$Protein == "Sodium/potassium-transporting"] <- "NaK-ATPase"
Master.SRM <- data.frame(merge(x=Growth[c("PRVial", "FShell", "AvgIShell", "Growth")], y=Master.temp, by.x="PRVial", by.y="Sample", all.x=T, all.y=T))
# Replace NaN strings with official "NA" designation & convert environmental stats to numeric
Master.SRM[Master.SRM == "NaN"] <- NA
Master.SRM$Region <- as.factor(Master.SRM$Region)
levels(Master.SRM$Protein) <- c(levels(Master.SRM$Protein), "NaK-ATPase")
Master.SRM$Protein[Master.SRM$Protein == 'Sodium/potassium-transporting'] <- 'NaK-ATPase'
View(Master.SRM)
write.csv(file="results/SRM/Master-Data-Joined.csv", Master.SRM)
# Correlation test by protein
grow.Pep1.cor <- data.frame(matrix(ncol=4, nrow=0))
colnames(grow.Pep1.cor) <- c("Protein", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficien and plot peptides against growth for each protein
for (i in 1:length(Protein.names)) {
temp1 <- cor.test(~Growth + Pep1, data=Master.SRM[grepl(Protein.names[[i]], Master.SRM$Protein),])
grow.Pep1.cor[i,"Protein"] <- Protein.names[[i]]
grow.Pep1.cor[i,"Estimate"] <- temp1$estimate
grow.Pep1.cor[i,"Statistic"] <- temp1$statistic
grow.Pep1.cor[i,"P-Value"] <- temp1$p.value
}
Protein.names
Protein.names[11] <- 'NaK-ATPase'
# Correlation test by protein
grow.Pep1.cor <- data.frame(matrix(ncol=4, nrow=0))
colnames(grow.Pep1.cor) <- c("Protein", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficien and plot peptides against growth for each protein
for (i in 1:length(Protein.names)) {
temp1 <- cor.test(~Growth + Pep1, data=Master.SRM[grepl(Protein.names[[i]], Master.SRM$Protein),])
grow.Pep1.cor[i,"Protein"] <- Protein.names[[i]]
grow.Pep1.cor[i,"Estimate"] <- temp1$estimate
grow.Pep1.cor[i,"Statistic"] <- temp1$statistic
grow.Pep1.cor[i,"P-Value"] <- temp1$p.value
}
write.csv(file="results/SRM/Grow-Abun-Cor-test.csv", grow.Pep1.cor)
# Generate correlation plots between Peptide 1 abundance (most abundant/detected peptide in all proteins) and relative growth
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Protein.names[[i]], Master.SRM$Protein),][c("Growth", "Pep1")], main=paste(Protein.names[[i]], "\nPeptide Abundance ~ Growth", sep=""), ylab="Peptide 1 Abundance", xlab="Relative Growth (mm)")
dev.off()
}
temp2 <- data.frame(matrix(ncol=5, nrow=0))
colnames(temp2) <- c("Env-Metric", "Env-Stat", "Estimate", "Statistic", "P-Value")
temp4 <- data.frame(matrix(ncol=5, nrow=0))
colnames(temp4) <- c("Env-Metric", "Env-Stat", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficient and plot peptides against growth for each protein
for (i in 1:length(Env.parameters)) {
temp1 <- cor.test(~Growth + Mean, data=Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),])
temp2[i,"Env-Metric"] <- Env.parameters[[i]]
temp2[i,"Env-Stat"] <- "Mean"
temp2[i,"Estimate"] <- temp1$estimate
temp2[i,"Statistic"] <- temp1$statistic
temp2[i,"P-Value"] <- temp1$p.value
temp3 <- cor.test(~Growth + Var, data=Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),])
temp4[i,"Env-Metric"] <- Env.parameters[[i]]
temp4[i,"Env-Stat"] <- "Var"
temp4[i,"Estimate"] <- temp1$estimate
temp4[i,"Statistic"] <- temp1$statistic
temp4[i,"P-Value"] <- temp1$p.value
}
grow.env.cor <- rbind(temp2, temp4)
write.csv(file="results/Environmental/Grow-Env-Cor-test.csv", grow.env.cor)
# Generate correlation plots between relative growth mean pH, DO, Temp, Salinity
for (i in 1:length(Env.parameters)) {
png(paste("results/Correlation-plots/", Env.parameters[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),][c("Mean", "Growth")], main=paste("Growth ~ Mean ", Env.parameters[[i]], sep=""), ylab="Relative Growth (mm)", xlab=paste("Mean ", Env.parameters[[i]], sep=""))
dev.off()
}
# Generate correlation plots between relative growth & pH, DO, Temp, Salinity
for (i in 1:length(Env.parameters)) {
png(paste("results/Correlation-plots/", Env.parameters[[i]], "-Grow-Corrplot.png", sep=""), width=700, height=700)
plot(Master.SRM[grepl(Env.parameters[[i]], Master.SRM$metric),][c("Growth", "Var")], main=paste("Growth ~ ", Env.parameters[[i]], " Variance", sep=""), ylab="Relative Growth (mm)", xlab=paste(Env.parameters[[i]], " Variance", sep=""))
dev.off()
}
# Correlation test of Pep1 by environmental parameters, each protein separately
temp2 <- data.frame(matrix(ncol=6, nrow=0))
colnames(temp2) <- c("Protein", "Env-Paramter", "Env-Metric", "Estimate", "Statistic", "P-Value")
temp4 <- data.frame(matrix(ncol=6, nrow=0))
colnames(temp4) <- c("Protein", "Env-Paramter", "Env-Metric", "Estimate", "Statistic", "P-Value")
# Calculate correlation coefficien and plot peptides against growth for each protein
for (j in 1:length(Env.parameters)) {
for (i in 1:length(Protein.names)) {
temp1 <- cor.test(~Pep1 + Mean, data=subset(Master.SRM, (metric==Env.parameters[[j]] & Protein==Protein.names[[i]])))
temp2[i+13*j,"Protein"] <- Protein.names[[i]]
temp2[i+13*j,"Env-Paramter"] <- Env.parameters[[j]]
temp2[i+13*j,"Env-Metric"] <- "Mean"
temp2[i+13*j,"Estimate"] <- temp1$estimate
temp2[i+13*j,"Statistic"] <- temp1$statistic
temp2[i+13*j,"P-Value"] <- temp1$p.value
}
}
for (j in 1:length(Env.parameters)) {
for (i in 1:length(Protein.names)) {
temp3 <- cor.test(~Pep1 + Var, data=subset(Master.SRM, (metric==Env.parameters[[j]] & Protein==Protein.names[[i]])))
temp4[i+13*j,"Protein"] <- Protein.names[[i]]
temp4[i+13*j,"Env-Paramter"] <- Env.parameters[[j]]
temp4[i+13*j,"Env-Metric"] <- "Var"
temp4[i+13*j,"Estimate"] <- temp3$estimate
temp4[i+13*j,"Statistic"] <- temp3$statistic
temp4[i+13*j,"P-Value"] <- temp3$p.value
}
}
env.pep1.cor <- rbind(temp2, temp4)
write.csv(file="results/SRM/Pep-Env-Cor-test.csv", env.pep1.cor)
# Generate correlation plots between Mean Environmental Parameters and  Peptide 1 abundance (most abundant/detected peptide in all proteins)
# Mean pH
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-pH-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="pH"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean pH", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-pH Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="pH"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\npH Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean pH")
dev.off()
}
# DO
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-DO-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="DO"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean DO", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-DO Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="DO"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\nDO Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean DO")
dev.off()
}
#Temperature
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-Temperature-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Temperature"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean Temperature", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Temperature Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Temperature"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\nTemperature Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Temperature")
dev.off()
}
#Salinity
for (i in 1:length(Protein.names)) {
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Mean-Salinity-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Salinity"))[c("Mean", "Pep1")], main=paste(Protein.names[[i]], " Peptide Abundance ~ ", "\nMean Salinity", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Salinity")
dev.off()
png(paste("results/Correlation-plots/", Protein.names[[i]], "-Salinity Variance-Corrplot.png", sep=""), width=700, height=500)
plot(subset(Master.SRM, (Protein==Protein.names[[i]] & metric=="Salinity"))[c("Var", "Pep1")], main=paste(Protein.names[[i]], " Abundance ~ ", "\nSalinity Variance", sep=""), ylab="Peptide 1 Abundance", xlab="Mean Salinity")
dev.off()
}
#generate linear model, x= DIA RT, y=SRM RT
summary(PRTC.RT.lm <- lm(SRM.RT ~ DIA.RT, data=filter(RT.PRTC.merged, Protein=="PRTC peptides")))
RT.DIA.Ducks
RT.DIA.Ducks
RT.DIA.PRTC
RT.SRM
RT.PRTC.merged
#generate linear model, x= DIA RT, y=SRM RT
summary(PRTC.RT.lm <- lm(SRM.RT ~ DIA.RT, data=filter(RT.PRTC.merged, Protein=="PRTC peptides")))
library(stringr)
library(curl)
library(vegan)
library(plotly)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(rcompanion)
library(reshape)
library(reshape2)
library(pryr)
#generate linear model, x= DIA RT, y=SRM RT
summary(PRTC.RT.lm <- lm(SRM.RT ~ DIA.RT, data=filter(RT.PRTC.merged, Protein=="PRTC peptides")))
summary(RT.Fit <- lm(SRM.RT ~ SRM.Predicted, data=RT.SRM.Pred.Act))
.32079/.01237
Growth
anova(lm(Growth ~ Bay, data=Growth)) # yes, growth differences between bays.
# How significant was the growth by region?
anova(lm(Growth ~ Region, data=Growth))
temp1
anova(lm(Growth ~ Bay/Habitat, data=Growth)) #no growth differences between habitats within bays, so now look at all combination of bays
# How significant was the growth by region?
anova(lm(Growth ~ Region, data=Growth))
# ANOVA testing on mean & variance
anova(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "pH"),]))
# ANOVA testing on mean & variance
anova(lm(Mean ~ Habitat/Bay, EnvSum[which(EnvSum$metric %in% "pH"),]))
# ANOVA testing on mean & variance
anova(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "pH"),]))
# ANOVA testing on mean & variance
anova(lm(Mean ~ Habitat*Bay, EnvSum[which(EnvSum$metric %in% "pH"),]))
# ANOVA testing on mean & variance
summary(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "pH"),]))
# ANOVA testing on mean & variance
summary(lm(Mean ~ Both, EnvSum[which(EnvSum$metric %in% "pH"),]))
head(EnvSum)
# ANOVA testing on mean & variance
summary(lm(Mean ~ variable, EnvSum[which(EnvSum$metric %in% "pH"),]))
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "pH"),]))
pH.series.noOuts
Salinity.series.noOuts
View(EnvSum)
summary(lm(Mean ~ Habitat-1, EnvSum[which(EnvSum$metric %in% "pH"),]))
aggregate(value ~ metric + Habitat, Env.Data.Master.noOuts, sd)$value
aggregate(value ~ metric + Habitat , Env.Data.Master.noOuts, sd)
aggregate(value ~ metric + Habitat , Env.Data.Master.noOuts, mean)
aggregate(value ~ metric + Habitat , Env.Data.Master.noOuts, var)
View(Env.ANOVA)
# compare means
e.ANOVA.mean.habitat <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.mean.habitat[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.mean.habitat[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.mean.habitat[[i]]$Response <-  rownames(e.ANOVA.mean.habitat[[i]])
e.ANOVA.mean.habitat[[i]]$Comparison <-  c("Habitat")
e.ANOVA.mean.habitat[[i]]$Stat <-  c("Mean")
}
e.ANOVA.mean.bay <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.mean.bay[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.mean.bay[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.mean.bay[[i]]$Response <-  rownames(e.ANOVA.mean.bay[[i]])
e.ANOVA.mean.bay[[i]]$Comparison <-  c("Bay")
e.ANOVA.mean.bay[[i]]$Stat <-  c("Mean")
}
e.ANOVA.mean.region <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Mean ~ Region, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.mean.region[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.mean.region[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.mean.region[[i]]$Response <-  rownames(e.ANOVA.mean.region[[i]])
e.ANOVA.mean.region[[i]]$Comparison <-  c("Region")
e.ANOVA.mean.region[[i]]$Stat <-  c("Mean")
}
# Compare variances
e.ANOVA.var.habitat <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Var ~ Habitat, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.var.habitat[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.var.habitat[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.var.habitat[[i]]$Response <-  rownames(e.ANOVA.var.habitat[[i]])
e.ANOVA.var.habitat[[i]]$Comparison <-  c("Habitat")
e.ANOVA.var.habitat[[i]]$Stat <-  c("Var")
}
e.ANOVA.var.bay <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Var ~ Bay, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.var.bay[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.var.bay[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.var.bay[[i]]$Response <-  rownames(e.ANOVA.var.bay[[i]])
e.ANOVA.var.bay[[i]]$Comparison <-  c("Bay")
e.ANOVA.var.bay[[i]]$Stat <-  c("Var")
}
e.ANOVA.var.region <- vector("list", length(Env.parameters))
for (i in 1:length(Env.parameters)) {
temp1 <- anova(lm(Var ~ Region, EnvSum[which(EnvSum$metric %in% Env.parameters[[i]]),]))
e.ANOVA.var.region[[i]] <- as.data.frame(temp1[,c(1:5)])
e.ANOVA.var.region[[i]]$metric <- c((Env.parameters[i]))
e.ANOVA.var.region[[i]]$Response <-  rownames(e.ANOVA.var.region[[i]])
e.ANOVA.var.region[[i]]$Comparison <-  c("Region")
e.ANOVA.var.region[[i]]$Stat <-  c("Var")
}
Env.ANOVA <- do.call("rbind", list(e.ANOVA.mean.habitat, e.ANOVA.mean.bay, e.ANOVA.mean.region, e.ANOVA.var.habitat, e.ANOVA.var.bay, e.ANOVA.var.region))
Env.ANOVA <- do.call(rbind, Env.ANOVA)
Env.ANOVA$P.adj <- (Env.ANOVA$`Pr(>F)`*4)
View(Env.ANOVA)
anova(lm(Var ~ Region, EnvSum[which(EnvSum$metric %in% "DO"),]))
summary(lm(Var ~ Region-1, EnvSum[which(EnvSum$metric %in% "DO"),]))
aggregate(value ~ metric + Region , Env.Data.Master.noOuts, var)
aggregate(value ~ metric + Habitat , Env.Data.Master.noOuts, mean)
aggregate(value ~ metric + Bay , Env.Data.Master.noOuts, mean)
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Habitat/Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Both, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ variable, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
anova(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Salinity"),]))
summary(lm(Mean ~ Habitat, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
EnvSum$Bay<-relevel(EnvSum$Bay, ref = "FB")
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
EnvSum$Bay<-relevel(EnvSum$Bay, ref = "CI")
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
EnvSum$Bay<-relevel(EnvSum$Bay, ref = "WB")
summary(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
anova(lm(Mean ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
summary(lm(Var ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
anova(lm(Var ~ Bay, EnvSum[which(EnvSum$metric %in% "Temperature"),]))
