Arachidonate <- data.melted.plus[grepl(c("Arachidonate"), data.melted.plus$Protein.Name),]
Catalase <- data.melted.plus[grepl(c("Catalase"), data.melted.plus$Protein.Name),]
Cytochrome <- data.melted.plus[grepl(c("Cytochrome"), data.melted.plus$Protein.Name),]
Glycogen <- data.melted.plus[grepl(c("Glycogen"), data.melted.plus$Protein.Name),]
HSP70 <- data.melted.plus[grepl(c("Heat shock 70"), data.melted.plus$Protein.Name),]
HSP90 <- data.melted.plus[grepl(c("HSP 90"), data.melted.plus$Protein.Name),]
Peroxiredoxin <- data.melted.plus[grepl(c("Peroxiredoxin"), data.melted.plus$Protein.Name),]
PDI <- data.melted.plus[grepl(c("Protein disulfide-isomerase"), data.melted.plus$Protein.Name),]
Puromycin <- data.melted.plus[grepl(c("Puromycin"), data.melted.plus$Protein.Name),]
Rab.11B <- data.melted.plus[grepl(c("Rab-11B"), data.melted.plus$Protein.Name),]
NAK <- data.melted.plus[grepl(c("Sodium/potassium"), data.melted.plus$Protein.Name),]
Superoxide <- data.melted.plus[grepl(c("Superoxide"), data.melted.plus$Protein.Name),]
Trifunctional <- data.melted.plus[grepl(c("Trifunctional"), data.melted.plus$Protein.Name),]
View(data.melted.plus)
View(data4anosim)
View(SRM.data)
Arachidonate <- data.melted.plus[grepl(c("Arachidonate"), data.melted.plus$Protein.Name),]
Catalase <- data.melted.plus[grepl(c("Catalase"), data.melted.plus$Protein.Name),]
Cytochrome <- data.melted.plus[grepl(c("Cytochrome"), data.melted.plus$Protein.Name),]
Glycogen <- data.melted.plus[grepl(c("Glycogen"), data.melted.plus$Protein.Name),]
HSP70 <- data.melted.plus[grepl(c("HSP70"), data.melted.plus$Protein.Name),]
HSP90 <- data.melted.plus[grepl(c("HSP90-alpha"), data.melted.plus$Protein.Name),]
Peroxiredoxin <- data.melted.plus[grepl(c("Peroxiredoxin"), data.melted.plus$Protein.Name),]
PDI <- data.melted.plus[grepl(c("PDI"), data.melted.plus$Protein.Name),]
Puromycin <- data.melted.plus[grepl(c("Puromycin-sensitive"), data.melted.plus$Protein.Name),]
Rab.11B <- data.melted.plus[grepl(c("Ras-related"), data.melted.plus$Protein.Name),]
NAK <- data.melted.plus[grepl(c("Sodium/potassium-transporting"), data.melted.plus$Protein.Name),]
Superoxide <- data.melted.plus[grepl(c("Superoxide"), data.melted.plus$Protein.Name),]
Trifunctional <- data.melted.plus[grepl(c("Trifunctional"), data.melted.plus$Protein.Name),]
View(HSP70)
Arachidonate.4anosim <- data.frame(merge(dcast(Arachidonate[,c(1,2,3,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE", all.y = TRUE), row.names = 1)
Catalase.4anosim <- data.frame(merge(dcast(Catalase[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Cytochrome.4anosim <- data.frame(merge(dcast(Cytochrome[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Glycogen.4anosim <- data.frame(merge(dcast(Glycogen[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
HSP70.4anosim <- data.frame(merge(dcast(HSP70[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
HSP90.4anosim <- data.frame(merge(dcast(HSP90[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Peroxiredoxin.4anosim <- data.frame(merge(dcast(Peroxiredoxin[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
PDI.4anosim <- data.frame(merge(dcast(PDI[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Puromycin.4anosim <- data.frame(merge(dcast(Puromycin[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Rab.11B.4anosim <- data.frame(merge(dcast(Rab.11B[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
NAK.4anosim <- data.frame(merge(dcast(NAK[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Superoxide.4anosim <- data.frame(merge(dcast(Superoxide[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Trifunctional.4anosim <- data.frame(merge(dcast(Trifunctional[,c(1,2,6)], SAMPLE~Pep.Trans), samples4anosim, by.x="SAMPLE", by.y="SAMPLE"), row.names = 1)
Arachidonate.vegdist <- vegdist(Arachidonate.4anosim[,1:9], 'bray', na.rm=TRUE)
Arachidonate.ANOSIM <-anosim(Arachidonate.vegdist, Arachidonate.4anosim$SITE, permutations = 2000)
summary(Arachidonate.ANOSIM)
plot(Arachidonate.ANOSIM)
Catalase.vegdist <- vegdist(Catalase.4anosim[,1:9], 'bray', na.rm=TRUE)
Catalase.ANOSIM <-anosim(Catalase.vegdist, grouping=Catalase.4anosim$SITE, permutations = 2000)
View(Catalase)
View(Catalase.4anosim)
View(Catalase.4anosim[1,])
Catalase.4anosim[1,]
View(Catalase.4anosim)
Catalase.vegdist <- vegdist(Catalase.4anosim[,1:6], 'bray', na.rm=TRUE)
Catalase.ANOSIM <-anosim(Catalase.vegdist, grouping=Catalase.4anosim$SITE, permutations = 2000)
summary(Catalase.ANOSIM)
plot(Catalase.ANOSIM)
Cytochrome.vegdist <- vegdist(Cytochrome.4anosim[,1:9], 'bray', na.rm=TRUE)
Cytochrome.ANOSIM <-anosim(Cytochrome.vegdist, grouping=Cytochrome.4anosim$SITE, permutations = 2000)
summary(Cytochrome.ANOSIM)
plot(Cytochrome.ANOSIM)
Glycogen.vegdist <- vegdist(Glycogen.4anosim[,1:9], 'bray', na.rm=TRUE)
Glycogen.ANOSIM <-anosim(Glycogen.vegdist, grouping=Glycogen.4anosim$SITE, permutations = 2000)
summary(Glycogen.ANOSIM)
plot(Glycogen.ANOSIM)
HSP70.vegdist <- vegdist(HSP70.4anosim[,1:6], 'bray', na.rm=TRUE)
HSP70.ANOSIM <-anosim(HSP70.vegdist, grouping=HSP70.4anosim$SITE, permutations = 2000)
summary(HSP70.ANOSIM)
plot(HSP70.ANOSIM)
HSP90.vegdist <- vegdist(HSP90.4anosim[,1:9], 'bray', na.rm=TRUE)
HSP90.ANOSIM <-anosim(HSP90.vegdist, grouping=HSP90.4anosim$SITE, permutations = 2000)
summary(HSP90.ANOSIM)
plot(HSP90.ANOSIM)
Peroxiredoxin.vegdist <- vegdist(Peroxiredoxin.4anosim[,1:3], 'bray', na.rm=TRUE)
Peroxiredoxin.ANOSIM <-anosim(Peroxiredoxin.vegdist, grouping=Peroxiredoxin.4anosim$SITE, permutations = 2000)
summary(Peroxiredoxin.ANOSIM)
plot(Peroxiredoxin.ANOSIM)
PDI.vegdist <- vegdist(PDI.4anosim[,1:6], 'bray', na.rm=TRUE)
PDI.ANOSIM <-anosim(PDI.vegdist, grouping=PDI.4anosim$SITE, permutations = 2000)
summary(PDI.ANOSIM)
plot(PDI.ANOSIM)
Puromycin.vegdist <- vegdist(Puromycin.4anosim[,1:9], 'bray', na.rm=TRUE)
Puromycin.ANOSIM <-anosim(Puromycin.vegdist, grouping=Puromycin.4anosim$SITE, permutations = 2000)
summary(Puromycin.ANOSIM)
plot(PDI.ANOSIM)
plot(Puromycin.ANOSIM)
Rab.11B.vegdist <- vegdist(Rab.11B.4anosim[,1:3], 'bray', na.rm=TRUE)
Rab.11B.ANOSIM <-anosim(Rab.11B.vegdist, grouping=Rab.11B.4anosim$SITE, permutations = 2000)
summary(Rab.11B.ANOSIM)
plot(Rab.11B.ANOSIM)
NAK.vegdist <- vegdist(NAK.4anosim[,1:6], 'bray', na.rm=TRUE)
NAK.ANOSIM <-anosim(NAK.vegdist, grouping=NAK.4anosim$SITE, permutations = 2000)
summary(NAK.ANOSIM)
plot(NAK.ANOSIM)
Superoxide.vegdist <- vegdist(Superoxide.4anosim[,1:5], 'bray', na.rm=TRUE)
Superoxide.ANOSIM <-anosim(Superoxide.vegdist, grouping=Superoxide.4anosim$SITE, permutations = 2000)
summary(Superoxide.ANOSIM)
plot(Superoxide.ANOSIM)
View(Trifunctional.4anosim)
Trifunctional.vegdist <- vegdist(Trifunctional.4anosim[,1:9], 'bray', na.rm=TRUE)
Trifunctional.ANOSIM <-anosim(Trifunctional.vegdist, grouping=Trifunctional.4anosim$SITE, permutations = 2000)
summary(Trifunctional.ANOSIM)
plot(Trifunctional.ANOSIM)
library(ggplot2)
levels(data.melted.plus$SITE)
data.melted.plus$SITE <- factor(data.melted.plus$SITE, levels=c("WB", "CI", "PG", "FB"))
ggplot(subset(data.melted.plus, Pep.Trans %in% "GVVDSEDLPLNISR y7"), aes(x=SITE, y=Area, fill=SITE)) +
geom_boxplot(color="black", position = position_dodge()) +
ggtitle("Heat shock 90 \nabundance by site") +
theme(plot.title = element_text(size=22), axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
guides(fill=FALSE) +
scale_fill_discrete(labels=c("Willapa Bay", "Case Inlet", "Fidalgo Bay", "Port Gamble")) +
ylab("Protein Abundance (Peak Intensity)") +
coord_flip()
ggplot(subset(data.melted.plus, Pep.Trans %in% "IINEPTAAALAYGLDK y12"), aes(x=SITE, y=Area, fill=SITE)) +
geom_boxplot(color="black", position = position_dodge()) +
ggtitle("Heat shock 70 \nabundance by site") +
theme(plot.title = element_text(size=22), axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
guides(fill=FALSE) +
scale_fill_discrete(labels=c("Willapa Bay", "Case Inlet", "Fidalgo Bay", "Port Gamble")) +
ylab("Protein Abundance (Peak Intensity)") +
coord_flip()
ggplot(subset(data.melted.plus, Pep.Trans %in% "DNVVVIGFFK y5"), aes(x=SITE, y=Area, fill=SITE)) +
geom_boxplot(color="black", position = position_dodge()) +
ggtitle("Protein Disulfide Isomerase \nabundance by site") +
theme(plot.title = element_text(size=22), axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"), axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) +
guides(fill=FALSE) +
scale_fill_discrete(labels=c("Willapa Bay", "Case Inlet", "Fidalgo Bay", "Port Gamble")) +
ylab("Protein Abundance (Peak Intensity)") +
coord_flip()
oats
library(MASS)
data(oats)
names(oats) = c('block', 'variety', 'nitrogen', 'yield')
summary(oats)
view(oats)
View(oats)
oats$mainplot = oats$variety
oats$mainplot
oats$subplot = oats$nitrogen
View(oats)
summary(oats)
library(nlme)
m1.nlme <- lme(yield ~ variety*nitrogen,
random = ~1|block/mainplot,
data = oats)
summary(m1.nlme)
variety*nitrogen
library(lme4)
library(lme4)
install.packages(lme4)
library(plotly)
Olur10
Olur10
# Generate bar plots
library(plotly)
Olur10 <- plot_ly(data = subset(allele.frequencies, allele.frequencies$Locus == "Olur10"), x = ~allele, y = ~count, type="bar", color=~Population, hovertext=~count) %>%  #generate plotly plot
layout(title="Olur10 Allele Frequency",
yaxis = list(title = 'Frequency'),
xaxis = list(title = 'Allele Size (bp)'),
legend = list(x=.95, y=.95))
Density.plot
Treatment <- c(1,1,1,1,2,2,2,2,3,3,3,3)
Response <- c(7.2, 3.9, 5.4, 6.3, 12.1, 9.7, 8.6, 10.2, 3.9, 5.1, 4.2, 3.6)
length(Response) == length(Treatment)
anova(lm.quiz <- lm(Response ~ Treatment))
summary(lm.quiz <- lm(Response ~ Treatment))
lm.quiz
anova(lm.quiz)
aov(Response ~ Treatment)
anova(lm.quiz)
summary(lm.quiz <- lm(Response ~ factor(Treatment)))
anova(lm.quiz)
summary(lm.quiz <- lm(Response ~ factor(Treatment)))
mean(Response[1:4])
mean(Response[5:8])
mean(Response[9:12])
install.packages("seacarb")
library(seacarb)
library("seacarb")
install.packages("seacarb")
library("seacarb")
# pH and AT are known:
carb(flag=8, var1=7.82, var2=2307.41 , S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
2307.41/1000
# pH and AT are known:
carb(flag=8, var1=7.82, var2=2307.41/1000, S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
# pH and AT are known:
carb(flag=8, var1=7.82, var2=(2307.41/1000), S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
carb(flag=8, var1=7.82, var2=(2307.41/1000), S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
# pH and AT are known:
test <- carb(flag=8, var1=7.82, var2=(2307.41/1000), S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
test[[1]]
test[["pCO2"]]
test[["pCO2"]]/1000
rm(test)
# pH and AT are known:
test.pCO2 <- carb(flag=8, var1=7.82, var2=(2307.41/1000), S=29, T=25, P=0, Pt=0, Sit=0, pHscale="T")
test.pCO2[["pCO2"]]/1000
# pH and AT are known:
test.pCO2 <- carb(flag=8, var1=7.82, var2=(2307.41/1000), S=29, T=25, pHscale="T")
test.pCO2[["pCO2"]]/1000 #extract pCO2 in atmospheres
day <- c(5, 19, 33, 42, 48)
pH.control <- c(7.82, 7.82, 7.81, 7.79, 7.82)
pH.low <- c(7.33, 7.29, 7.31, 7.37, 7.29)
ta.control <- c(2307, NA, 2747, NA, 2611)
ta.low <- c(2332, NA, 2918, NA, 2808)
day <- c(5, 19, 33, 42, 48)
pH.control <- c(7.82, 7.82, 7.81, 7.79, 7.82)
pH.low <- c(7.33, 7.29, 7.31, 7.37, 7.29)
ta.control <- c(2307, NA, 2747, NA, 2611)
ta.low <- c(2332, NA, 2918, NA, 2808)
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1000), S=29, T=25, pHscale="T")
test.pCO2.ambient[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(pH.low/1000), S=29, T=25, pHscale="T")
test.pCO2.low[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1000), S=29, T=25, pHscale="T")
test.pCO2.low[["pCO2"]]/1000 #extract pCO2 in atmospheres
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1000), S=29, T=25, pHscale="T")
test.pCO2.ambient
794612.2/1000
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1000), S=29, T=25, pHscale="T")
test.pCO2.low
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1000), S=29, T=25, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.ambient[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1000), S=29, T=25, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.low[["pCO2"]]/1000 #extract pCO2 in atmospheres
2400e-6
ta.low/1000
ta.low/1e6
ta.control/1e6
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=29, T=25, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.ambient[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=29, T=25, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.low[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.ambient[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.low[["pCO2"]]/1000 #extract pCO2 in atmospheres
ta.low/1e6
2400e-6
pH.control
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=28, T=20, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.ambient[["pCO2"]]/1000 #extract pCO2 in atmospheres
test.pCO2.ambient[["pCO2"]] #extract pCO2 in atmospheres
test.pCO2.low[["pCO2"]] #extract pCO2 in atmospheres
carb(flag=8, var1=8.2, var2=0.00234, S=35, T=25, P=0, Pt=0, Sit=0,
k1k2="l", kf="pf", pHscale="T")
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=28, T=20, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.ambient[["pCO2"]] #extract pCO2 in atmospheres
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=29, T=25, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.low[["pCO2"]] #extract pCO2 in atmospheres
mean(11.75, 11.81, 11.99)
temp.low <- c(mean(10.65, 10.86, 10.9), NA, mean(11.74, 10.68, 11.11), NA, mean(10.92, 10.96, 11.09))
temp.control <- c(mean(10.2, 10.22, 10.25), NA, mean(11.46, 11.2, 11.4), NA, mean(11.75, 11.81, 11.99))
temp.low
temp.control
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=28, T=temp.control, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T") #
temp.control
day <- c(5, 33, 48)
temp.low <- c(mean(10.65, 10.86, 10.9), mean(11.74, 10.68, 11.11), mean(10.92, 10.96, 11.09))
temp.control <- c(mean(10.2, 10.22, 10.25), mean(11.46, 11.2, 11.4), mean(11.75, 11.81, 11.99))
pH.control <- c(7.82, 7.81, 7.82) #unit = pH(total)
pH.low <- c(7.33, 7.31, 7.29) #unit = pH(total)
ta.control <- c(2307, 2747, 2611) #unit = µmol/kg, need to convert to mol/kg
ta.low <- c(2332, 2918, 2808) #unit = µmol/kg, need to convert to mol/kg
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=28, T=temp.control, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T") #
test.pCO2.ambient[["pCO2"]] #extract pCO2 in uatm
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=29, T=temp.low, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.low[["pCO2"]] #extract pCO2 in uatm
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=29, T=temp.low, P=0, Pt=0, Sit=0, k1k2="l", kf="pf", pHscale="T")
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=29, T=temp.low, pHscale="T")
test.pCO2.low[["pCO2"]] #extract pCO2 in uatm
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.control, var2=(ta.control/1e6), S=28, T=temp.control, pHscale="T") #
test.pCO2.ambient[["pCO2"]] #extract pCO2 in uatm
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=28, T=temp.low, pHscale="T")
test.pCO2.low[["pCO2"]] #extract pCO2 in uatm
salinity.low <- c(mean(28.3, 28.1, 28.0), mean(28.2, 28.1, 282.2), mean(26.4, 26.5, 26.5))
salinity.control <- c(mean(28.1, 28.1, 28.2), mean(28.3, 28.2, 28.2), mean(26.5, 26.5, 26.5))
day <- c(5, 33, 48)
temp.low <- c(mean(10.65, 10.86, 10.9), mean(11.74, 10.68, 11.11), mean(10.92, 10.96, 11.09))
temp.ambient <- c(mean(10.2, 10.22, 10.25), mean(11.46, 11.2, 11.4), mean(11.75, 11.81, 11.99))
salinity.low <- c(mean(28.3, 28.1, 28.0), mean(28.2, 28.1, 282.2), mean(26.4, 26.5, 26.5))
salinity.ambient <- c(mean(28.1, 28.1, 28.2), mean(28.3, 28.2, 28.2), mean(26.5, 26.5, 26.5))
pH.ambient <- c(7.82, 7.81, 7.82) #unit = pH(total)
pH.low <- c(7.33, 7.31, 7.29) #unit = pH(total)
ta.ambient <- c(2307, 2747, 2611) #unit = µmol/kg, need to convert to mol/kg
ta.low <- c(2332, 2918, 2808) #unit = µmol/kg, need to convert to mol/kg
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.ambient, var2=(ta.ambient/1e6), S=salinity.ambient, T=temp.ambient, pHscale="T") #
test.pCO2.ambient[["pCO2"]] #extract pCO2 in uatm
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=salinity.low, T=temp.low, pHscale="T")
test.pCO2.low[["pCO2"]] #extract pCO2 in uatm
test.pCO2.ambient[["pCO2"]] #extract pCO2 in uatm
round(test.pCO2.ambient[["pCO2"]]) #extract pCO2 in uatm
round(test.pCO2.low[["pCO2"]]) #extract pCO2 in uatm
getwd()
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv")
Oly.size
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv")
Oly.size
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv", header = T, stringsAsFactors = T)
Oly.size
t(Oly.size)
t(na.omit(Oly.size))
Oly.size
library(dplyr)
library(reshape2)
Oly.size[-1]
melt(Oly.size[-1])
Oly.size
melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"))
melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"))
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"))
str(Oly.size.long)
str(value ~ GROUP, Oly.size.long, mean)
Oly.size.long
aggregate(value ~ GROUP, Oly.size.long, mean)
aggregate(value ~ GROUP, Oly.size.long, mean, na.action = na.omit)
aggregate(GROUP ~ value, Oly.size.long, mean, na.action = na.omit)
head(Oly.size.long)
str(Oly.)Oly.size.long
str(Oly.size.long)
Oly.size.long$value <- as.numeric(Oly.size.long$value)
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"), na.action = na.omit)
aggregate(value ~ GROUP, Oly.size.long, mean, na.action = na.omit)
Oly.size.long$value <- as.numeric(Oly.size.long$value)
aggregate(value ~ GROUP, Oly.size.long, mean, na.action = na.omit)
aggregate(value ~ GROUP, Oly.size.long, sd, na.action = na.omit)
boxplot(value ~ GROUP, data=Oly.size.long)
barplot(value ~ GROUP, data=Oly.size.long)
plot(value ~ GROUP, data=Oly.size.long)
plot(value ~ GROUP, data=Oly.size.long)
plot(value ~ GROUP, data=Oly.size.long)
summary(lm(value ~ GROUP, data=Oly.size.long))
summary(lm(value ~ GROUP-1, data=Oly.size.long))
anova(lm(value ~ GROUP, data=Oly.size.long))
summary(lm(value ~ GROUP-1, data=Oly.size.long))
anova(lm(value ~ GROUP, data=Oly.size.long))
anova(Size.lm <- lm(value ~ GROUP, data=Oly.size.long))
plot(x=Oly.size.long$value, y=Size.lm$residuals)
Size.lm$residuals
library(HH)
case(Size.lm)
case(Size.lm)["stu.res"]
case(Size.lm)[,"stu.res"]
plot(case(Size.lm)[,"stu.res"])
abline(h=c(0,2,-2))
plot(case(Size.lm)[,"stu.res"], ylim=c(-3,3))
abline(h=c(0,2,-2))
plot(x=GROUP, y=value, data=Oly.size.long)
plot(x=Oly.size.long$GROUP, y=Oly.size.long$value)
anova(Size.lm <- lm(value ~ GROUP, data=Oly.size.long))
?t.test()
t.test(value ~ GROUP, data=Oly.size.long)
anova(Size.lm <- lm(value ~ GROUP, data=Oly.size.long))
summary(Size.lm)
model.matrix(Size.lm)
summary(Size.lm)
summary(lm(value ~ GROUP-1, data=Oly.size.long)) #mean and SE for each group
library(ggplot2)
ggplot(data=Oly.size.long, aes(x=value,y=1,colour=GROUP))
ggplot(data=Oly.size.long, aes(y=value,colour=GROUP))
ggplot(data=Oly.size.long, aes(y=value,colour=GROUP))
hist(Oly.size.long)
hist(Oly.size.long)
hist(Oly.size.long$value)
qqplot(Oly.size.long)
qqplot(Oly.size.long$value)
qqplot(Oly.size.long$value)
qqplot(x=Oly.size.long$GROUP, y=Oly.size.long$value)
qqplot(y=Oly.size.long$value)
hist(Oly.size.long$value)
ggdensity(Oly.size.long, x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP",
palette = c("#0073C2FF", "#FC4E07"))
library(ggpubr)
ggdensity(Oly.size.long, x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP",
palette = c("#0073C2FF", "#FC4E07"))
summary(lm(value ~ GROUP-1, data=Oly.size.long)) #mean and SE for each group
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv", header = T, stringsAsFactors = T)
library(reshape2)
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"), na.action = na.omit)
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE-CLASS"), na.action = na.omit)
Oly.size
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv", header = T, stringsAsFactors = T)
Oly.size
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv", header = T, stringsAsFactors = T)
Oly.size
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE-CLASS"), na.action = na.omit)
Oly.size.long <- melt(Oly.size[-1], id.vars = c("GROUP", "SIZE.CLASS"), na.action = na.omit)
Oly.size.long$value <- as.numeric(Oly.size.long$value)
Oly.size.long
HEAD(Oly.size)
head(Oly.size)
Oly.size.long <- melt(Oly.size[c(-1, -4)], id.vars = c("GROUP", "SIZE.CLASS"), na.action = na.omit)
Oly.size.long <- melt(Oly.size[c(-1, -4)], id.vars = c("GROUP", "SIZE.CLASS"), na.action = na.omit)
Oly.size.long$value <- as.numeric(Oly.size.long$value)
aggregate(value ~ GROUP, Oly.size.long, mean, na.action = na.omit)
aggregate(value ~ GROUP, Oly.size.long, sd, na.action = na.omit)
plot(value ~ GROUP, data=Oly.size.long)
summary(lm(value ~ GROUP-1, data=Oly.size.long)) #mean and SE for each group
anova(Size.lm <- lm(value ~ GROUP, data=Oly.size.long))
summary(Size.lm)
summary(Size.lm)
t.test(value ~ GROUP, data=Oly.size.long)
library(ggpubr)
hist(Oly.size.long$value)
ggdensity(Oly.size.long, x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP",
palette = c("#0073C2FF", "#FC4E07"))
ggdensity(Oly.size.long, x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP")
Oly.size <- read.csv("Documents/Roberts Lab/O.lurida_Stress/Data/2018-05-04_Oly-Size.csv", header = T, stringsAsFactors = T)
head(Oly.size)
Oly.size.long <- melt(Oly.size[c(-1, -5, -6)], id.vars = c("GROUP", "Cohort", "Treatment", "SIZE.CLASS"), na.action = na.omit)
Oly.size.long <- melt(Oly.size[c(-1, -5, -6)], id.vars = c("GROUP", "Cohort", "Treatment", "SIZE.CLASS"), na.action = na.omit)
head(Oly.size)
Oly.size.long <- melt(Oly.size[c(-1, -5, -6)], id.vars = c("GROUP", "Cohort", "Treatment"), na.action = na.omit)
Oly.size.long$value <- as.numeric(Oly.size.long$value)
aggregate(value ~ GROUP, Oly.size.long, mean, na.action = na.omit)
aggregate(value ~ GROUP, Oly.size.long, sd, na.action = na.omit)
plot(value ~ GROUP, data=Oly.size.long)
anova(Size.lm <- lm(value ~ Cohort + Cohort/Treatment, data=Oly.size.long))
summary(Size.lm)
subset(Oly.size.long, Cohort=="NF")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP")
ggdensity(data=subset(Oly.size.long, Cohort=="HC"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP")
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("blue", "red"))
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("purple", "pink"))
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("purple", "pink")) + ggtitle("Hood Canal Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("blue", "red")) + ggtitle("North Sound Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("blue", "red")) + ggtitle("North Sound Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("purple", "pink")) + ggtitle("Hood Canal Size (mm)\n @ ~9months")
ggplot(Oly.size.long, aes(x = value, y = GROUP)) +
geom_density_ridges(aes(fill = GROUP)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07", "red"))
library(ggplot2)
ggplot(Oly.size.long, aes(x = value, y = GROUP)) +
geom_density_ridges(aes(fill = GROUP)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07", "red"))
install.packages("ggridges")
ggplot(Oly.size.long, aes(x = value, y = GROUP)) +
geom_density_ridges(aes(fill = GROUP)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07", "red"))
library(ggridges)
ggplot(Oly.size.long, aes(x = value, y = GROUP)) +
geom_density_ridges(aes(fill = GROUP)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07", "red"))
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("navy", "royalblue")) + ggtitle("North Sound Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("firebrick", "salmon")) + ggtitle("Hood Canal Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("blue", "red")) + ggtitle("North Sound Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("green", "pink")) + ggtitle("Hood Canal Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="HL"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("mediumseagreen", "indianred2")) + ggtitle("Hood Canal Size (mm)\n @ ~9months")
ggdensity(data=subset(Oly.size.long, Cohort=="NF"), x = "value",
add = "mean", rug = TRUE,
color = "GROUP", fill = "GROUP", palette = c("blue", "red")) + ggtitle("North Sound Size (mm)\n @ ~9months")
ggplot(Oly.size.long, aes(x = value, y = GROUP)) +
geom_density_ridges(aes(fill = GROUP)) +
scale_fill_manual(values = c("#00AFBB", "#E7B800", "#FC4E07", "red"))
anova(Size.lm <- lm(value ~ Cohort + Cohort/Treatment, data=Oly.size.long))
summary(lm(value ~ GROUP-1, data=Oly.size.long)) #mean and SE for each group
ta.ambient <- 0.75*c(2307, 2747, 2611) #unit = µmol/kg, need to convert to mol/kg
ta.low <- 0.75*c(2332, 2918, 2808) #unit = µmol/kg, need to convert to mol/kg
ta.ambient
# pH and AT are known:
test.pCO2.ambient <- carb(flag=8, var1=pH.ambient, var2=(ta.ambient/1e6), S=salinity.ambient, T=temp.ambient, pHscale="T") #
round(test.pCO2.ambient[["pCO2"]]) #extract pCO2 in uatm
test.pCO2.low <- carb(flag=8, var1=pH.low, var2=(ta.low/1e6), S=salinity.low, T=temp.low, pHscale="T")
round(test.pCO2.low[["pCO2"]]) #extract pCO2 in uatm
